// Generated by CoffeeScript 1.12.2
var CicloDetalleCtrl, CicloModalCtrl, CiclosCtrl, CiclosVerCtrl;

CiclosCtrl = function($scope, $state, $stateParams, Ciclos) {
  $scope.seleccionado = {};
  return $scope.go = function(state, obj) {
    if (obj == null) {
      obj = null;
    }
    return $state.go(state, obj);
  };
};

CiclosVerCtrl = function($scope, $state, $stateParams, $filter, $modal, Ciclos) {
  var loadCiclos;
  $scope.modal = $modal;
  loadCiclos = function() {
    return Ciclos.listado({
      accion: 1
    }).$promise.then(function(resultado) {
      $scope.seleccionado.ciclos = resultado.ciclos;
      return $scope.ciclos = resultado.ciclos;
    });
  };
  loadCiclos();
  return $scope.agregarCiclo = function() {
    $(".agregar-ciclo").attr("disabled", true);
    Ciclos.listado({
      accion: 3
    }).$promise.then(function(resultado) {
      var data, modalInstance;
      if (resultado.success) {
        $scope.niveles = resultado.niveles;
        $scope.jefes_utp = resultado.jefesutp;
        $scope.ciclosAgregar = resultado.ciclosAgregar;
        $scope.ciclo_establecimiento = [];
        $scope.ciclo_establecimiento.ciclo_select = '';
        $scope.ciclo_establecimiento.niveles_select = '';
        $scope.ciclo_establecimiento.jefeutp_select = '';
        data = {
          jefes_utp: $scope.jefes_utp,
          ciclosAgregar: $scope.ciclosAgregar,
          niveles: $scope.niveles,
          ciclo_establecimiento: $scope.ciclo_establecimiento
        };
        modalInstance = $modal.open({
          templateUrl: "/academico/template/ciclo-agregar",
          controller: 'CicloModalCtrl',
          size: "lg",
          resolve: {
            data: function() {
              return data;
            }
          }
        });
        modalInstance.result.then(function(resultado) {
          Ciclos.guardar({
            accion: 5,
            ciclo: resultado
          }).$promise.then(function(resultado) {
            if (resultado.success) {
              Ciclos.listado({
                accion: 1
              }).$promise.then(function(resultado) {
                $scope.seleccionado.ciclos = resultado.ciclos;
                return $scope.ciclos = resultado.ciclos;
              });
              toastr.success($filter('translate')("ACCION_OK"));
            }
            if (resultado.error) {
              return toastr.error($filter('translate')("ACCION_ERROR"));
            }
          });
          return $(".agregar-ciclo").attr("disabled", false);
        }, function(close) {
          toastr.info($filter('translate')("ACCION_CANCEL"));
          return $(".agregar-ciclo").attr("disabled", false);
        });
        return false;
      } else {
        if (resultado.ciclosAgregar === false) {
          return toastr.info($filter('translate')("ERROR_CICLOS"));
        } else {
          return toastr.error($filter('translate')("ACCION_ERROR"));
        }
      }
    });
    return false;
  };
};

CicloModalCtrl = function($scope, $compile, $state, $stateParams, $modalInstance, $filter, data, Ciclos) {
  $scope.responce = {};
  $scope.data = data;
  setTimeout((function() {
    angular.element(".jefe_utp").select2();
    angular.element(".ciclo").select2();
    angular.element(".niveles").select2();
  }), 100);
  $scope.aceptarModal = function(responce) {
    var guardar;
    if (responce == null) {
      responce = true;
    }
    guardar = true;
    if (!responce.ciclo_select) {
      angular.element(".ciclo").parent().parent().parent().addClass('error');
      guardar = false;
    }
    if (!responce.niveles_select) {
      angular.element(".niveles").parent().parent().parent().addClass('error');
      guardar = false;
    }
    if (!responce.jefeutp_select) {
      angular.element(".jefe_utp").parent().parent().parent().addClass('error');
      guardar = false;
    }
    if (guardar === true) {
      $state.go('ciclos.ver', {
        selectedParams: $scope.selectedData
      });
      return $modalInstance.close(responce);
    } else {
      toastr.error($filter('translate')("ACCION_ERROR"));
    }
  };
  return $scope.cancelModal = function() {
    return $modalInstance.dismiss('cancel');
  };
};

CicloDetalleCtrl = function($scope, $state, $stateParams, $filter, $modal, Ciclos) {
  $scope.id_ciclo = $stateParams.id_ciclo;
  Ciclos.listado({
    accion: 2,
    id_ciclo: $scope.id_ciclo
  }).$promise.then(function(resultado) {
    $scope.seleccionado.ciclo_establecimiento = resultado.ciclo;
    $scope.ciclo_establecimiento = resultado.ciclo;
    $scope.ciclo_establecimiento.niveles_select = [];
    $scope.ciclo_establecimiento.jefeutp_select = resultado.ciclo.jefeutp[0].id_persona;
    $scope.tipos_ensenanzas = resultado.tipos_ensenanzas;
    $scope.jefes_utp = resultado.jefesutp;
    angular.element(".niveles").select2();
    angular.element(".jefe_utp").select2();
    angular.forEach($scope.ciclo_establecimiento.niveles, function(nivel, key) {
      return $scope.ciclo_establecimiento.niveles_select.push(nivel.id_grado);
    });
    return setTimeout((function() {
      angular.element(".niveles").select2('val', $scope.ciclo_establecimiento.niveles_select);
      angular.element(".jefe_utp").select2('val', $scope.ciclo_establecimiento.jefeutp_select);
    }), 100);
  });
  $scope.guardarCiclo = function() {
    var guardar;
    guardar = true;
    angular.forEach("span.help-inline", function() {
      return angular.element("span.help-inline").remove();
    });
    if ($scope.ciclo_establecimiento.niveles_select.length === 0) {
      angular.element(".niveles").parent().parent().parent().addClass('error');
      guardar = false;
    } else {
      angular.element(".niveles").parent().parent().parent().removeClass('error');
    }
    if ($scope.ciclo_establecimiento.jefeutp_select === '-1') {
      angular.element(".jefe_utp").parent().parent().parent().addClass('error');
      guardar = false;
    } else {
      angular.element(".jefe_utp").parent().parent().parent().removeClass('error');
    }
    if (guardar) {
      return Ciclos.guardar({
        accion: 4,
        ciclo: $scope.ciclo_establecimiento
      }).$promise.then(function(resultado) {
        if (resultado.success) {
          toastr.success($filter('translate')("ACCION_OK"));
          $scope.go('ciclos.ver', {
            selectedParams: $scope.selectedData
          });
        }
        if (resultado.info) {
          toastr.info($filter('translate')("ACCION_SIN_CAMBIOS"));
        }
        if (resultado.error) {
          return toastr.error($filter('translate')("ACCION_ERROR"));
        }
      });
    } else {
      toastr.error($filter('translate')("ACCION_ERROR"));
    }
  };
  return $scope.eliminarCiclo = function(id_ciclo) {
    var modalInstance;
    $scope.modal = $modal;
    modalInstance = $modal.open({
      templateUrl: 'eliminar',
      controller: 'ModalCtrl',
      size: "lg",
      resolve: {
        data: function() {
          return {};
        }
      }
    }).result.then(function(resultado) {
      if (resultado === true) {
        $(".eliminar-ciclo").attr("disabled", true);
        return Ciclos.listado({
          accion: 6,
          id_ciclo: id_ciclo
        }, function(r) {
          $(".eliminar-ciclo").attr("disabled", false);
          if (r.success === true) {
            toastr.success($filter('translate')("ACCION_OK"));
            return $scope.go('ciclos.ver', {
              selectedParams: $scope.selectedData
            });
          } else {
            return toastr.error($filter('translate')("ACCION_ERROR"), $filter('translate')("ERROR"));
          }
        }, function(error) {
          $(".eliminar-ciclo").attr("disabled", false);
          return toastr.error($filter('translate')("ERROR_INESPERADO"), $filter('translate')("ERROR"));
        });
      }
    }, function(close) {
      toastr.info($filter('translate')("ACCION_CANCEL"));
      return $(".eliminar-ciclo").attr("disabled", false);
    });
    return false;
  };
};
